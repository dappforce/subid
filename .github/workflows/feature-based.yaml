name: feature based CI CD
on:
  workflow_dispatch:
    inputs:
      back-address:
        description: "Backend address to connect"
        required: true
        default: 'staging.sub.id'

jobs:
  front_build:
    name: build & Push front Docker image
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Extract branch name
        shell: bash
        run: echo "name=$(echo ${GITHUB_REF#refs/heads/} | sed 's/^deploy\///')" >> $GITHUB_ENV
        id: extract_branch

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Prepare
        id: prep
        run: |
          echo "image=dappforce/subid-front:${{ env.name }}-$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Build front image
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: docker/Dockerfile
          push: true
          build-args: |
                  GH_BACKEND_URL=https://${{ github.event.inputs.back-address }}
                  GH_IPFS_URL=https://ipfs.subsocial.network
                  GH_GA_ID=fake
                  GH_AMP_ID=a4dc29d356f19fd9788f24b493b462bf
          tags: |
                  ${{ env.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


  front-deploy:
    name: front deploy
    needs: front_build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Extract branch name
        shell: bash
        run: echo  "name=$(echo ${GITHUB_REF#refs/heads/} | sed 's/^deploy\///')" >> $GITHUB_ENV
        id: extract_branch

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN_STAGING }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_STAGING }}

      - name: Update docker image name
        run: TAG=${{ env.name }}-$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|dappforce/subid-front:'${TAG}'|' $GITHUB_WORKSPACE/deployment/features/deployment.yaml

      - name: Update svc & ingress file
        run: NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/features/all.yaml

      - name: Update deploy file
        run: NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/features/deployment.yaml

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment/features/

      - name: Verify deployment
        run: NAME=${{ env.name }} && kubectl -n sub-id rollout status deployment/subid-front-${NAME}

      - name: CF deploy
        continue-on-error: true
        run: curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/dns_records"      -H "X-Auth-Email:${{ secrets.CF_MAIL }}"      -H "Authorization:Bearer ${{ secrets.CF_TOKEN }}"      -H "Content-Type:application/json"      --data '{"type":"A","name":"${{ env.name }}-subid.subsocial.network","content":"174.138.105.155","ttl":3600,"priority":10,"proxied":true}'

      - run: mkdir -p domain

      - run: echo ${{ env.name }}-subid.subsocial.network > domain/subdomain-name.txt

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.name }}-subid.subsocial.network
          path: domain/subdomain-name.txt
