name: Common CD setup
description: 'Sets up the environment for jobs during CD'

inputs:
  token_input:
     description: "the k8s temporary creds"
     required: true
  k8s_input:
     description: "the cluster name"
     required: true
  app_input:
     description: "the App name"
     required: true
  zone_input:
     description: "the cf zone"
     required: true
  mail_input:
     description: "the cf mail"
     required: true
  tokens_input:
     description: "the cf token"
     required: true
  prod_deploy:
    description: "deploy to prod or not, Boolean"
    required: true

runs:
  using: composite
  steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract main branch name
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: echo "name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        id: extract_branch

      - name: Extract feature branch name
        if: startsWith(github.ref, 'refs/heads/deploy/')
        shell: bash
        run: echo "name=$(echo ${GITHUB_REF#refs/heads/} | sed 's/^deploy\///')" >> $GITHUB_ENV
        id: extract_features_branch

      - name: Prepare
        id: prep
        shell: bash
        run: |
          echo "image=dappforce/subid-frontend:${{ inputs.app_input }}-${{ env.name }}-$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ inputs.token_input }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        shell: bash
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ inputs.k8s_input }}



      - name: Add feature name
        if: startsWith(github.ref, 'refs/heads/deploy/')
        shell: bash
        run: |
          NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/all.yaml
          NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/deployment.yaml
          sed -i 's|<IMAGE>|'${{ env.image }}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/deployment.yaml
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ inputs.zone_input }}/dns_records"      -H "X-Auth-Email:${{ inputs.mail_input }}"      -H "Authorization:Bearer ${{ inputs.tokens_input }}"      -H "Content-Type:application/json"      --data '{"type":"A","name":"${{ env.name }}-subid.subsocial.network","content":"174.138.105.155","ttl":3600,"priority":10,"proxied":true}'
          kubectl apply -f $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/

      - name: make ${{ inputs.app_input }} ready
        if: github.ref == 'refs/heads/main' && inputs.prod_deploy == false
        shell: bash
        run: |
          sed -i 's|<IMAGE>|'${{ env.image }}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/daemon.yaml
          kubectl apply -f $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/daemon.yaml
          kubectl -n sub-id rollout status daemonset/front-ready
          kubectl delete -f $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/daemon.yaml

      - name: Deploy ${{ inputs.app_input }}
        if: github.ref == 'refs/heads/main' && inputs.prod_deploy == true
        shell: bash
        run: |
          sed -i 's|<IMAGE>|'${{ env.image }}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/deployment.yaml
          kubectl delete -f $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/hpa.yaml --ignore-not-found=true
          kubectl apply -f $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/deployment.yaml
          kubectl -n sub-id rollout status deployment/subid-front
          kubectl create -f $GITHUB_WORKSPACE/deployment/${{ inputs.app_input }}/hpa.yaml
